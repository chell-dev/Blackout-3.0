import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'fabric-loom' version '1.1-SNAPSHOT'
    id 'org.jetbrains.kotlin.jvm' version "${kotlin_version}"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'https://maven.terraformersmc.com/releases' }
}

dependencies {
    minecraft "com.mojang:minecraft:$project.minecraft_version"
    mappings "net.fabricmc:yarn:$project.yarn_mappings:v2"
    modImplementation "net.fabricmc:fabric-loader:$project.loader_version"

    include(implementation('org.jetbrains.kotlin:kotlin-stdlib'))
    //include(implementation('org.jetbrains.kotlin:kotlin-stdlib-jdk8'))
    //include(implementation('org.jetbrains.kotlin:kotlin-stdlib-jdk7'))
    include(implementation('org.jetbrains.kotlin:kotlin-reflect'))
    //include(implementation('org.jetbrains.kotlinx:kotlinx-coroutines-core'))
    //include(implementation('org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm'))
    //include(implementation('org.jetbrains.kotlinx:kotlinx-coroutines-jdk8'))

    include(implementation('com.github.Vatuu:discord-rpc:1.6.2'))
    include(modImplementation(fabricApi.module('fabric-resource-loader-v0', project.fabric_api_version)))
    include(implementation('org.reflections:reflections:0.10.2')); include 'org.javassist:javassist:3.28.0-GA'

    modImplementation("com.terraformersmc:modmenu:$project.modmenu_version")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release.set(17)
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = 17
    }
}