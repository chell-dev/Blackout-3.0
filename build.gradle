plugins {
    id 'fabric-loom' version "${loom_version}"
    id "org.jetbrains.kotlin.jvm" version "${kotlin_version}"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
group = project.maven_group

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'https://maven.terraformersmc.com/releases' }
    flatDir {
        dirs "./lib"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    include(implementation('org.jetbrains.kotlin:kotlin-stdlib'))
    //include(implementation('org.jetbrains.kotlin:kotlin-stdlib-jdk8'))
    //include(implementation('org.jetbrains.kotlin:kotlin-stdlib-jdk7'))
    include(implementation('org.jetbrains.kotlin:kotlin-reflect'))
    include(implementation('org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'))
    //include(implementation('org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm'))
    //include(implementation('org.jetbrains.kotlinx:kotlinx-coroutines-jdk8'))

    include(implementation("com.github.caoimhebyrne:KDiscordIPC:${project.kdiscordipc_version}"))
    include(modImplementation(fabricApi.module("fabric-resource-loader-v0", project.fabric_api_version)))
    include(implementation("org.reflections:reflections:${project.reflections_version}")); include "org.javassist:javassist:${project.javassist_version}"

    modImplementation "com.ptsmods:devlogin:${project.devlogin_version}"

    modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")
}

processResources {
    def json = new groovy.json.JsonSlurper().parse(file("src/main/resources/fabric.mod.json"))

    version = json.version
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release.set(17)
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = 17
    }
}

java {
    withSourcesJar()
}